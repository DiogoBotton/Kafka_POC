services:
  producer:
    build:
      dockerfile: ./KafkaDotNet.ProducerApi/Dockerfile
      context: .
    depends_on:
      - kafka
    ports:
       - "5050:8080"
       - "5051:8081"
    container_name: producer_service
    networks: 
      - net

  consumer:
    build:
      dockerfile: ./KafkaDotNet.Consumer/Dockerfile
      context: .
    depends_on:
      - kafka
    ports:
       - "5100:8080"
       - "5101:8081"
    container_name: consumer_service
    networks: 
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - net
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - net
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      # KAFKA_BROKER_ID: 1
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9092
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  
networks: 
  net:
    driver: bridge